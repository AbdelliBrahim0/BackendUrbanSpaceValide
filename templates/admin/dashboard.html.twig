<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Admin - UrbanSpace</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Axios pour les requêtes AJAX -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Animate.css -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">

    <style>
        /* Body */
        body {
            background-color: rgb(24, 48, 113);
            color: #fff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Navbar */
        .navbar {
            background-color: #1e1e1e;
        }
        .navbar-brand, .nav-link {
            color: #4e6ff6 !important;
            font-weight: 600;
        }

        /* Container */
        .container {
            margin-top: 2rem;
        }

        /* Stats Cards */
        .stats-card {
            background-color: #1e1e1e;
            border-radius: 12px;
            padding: 1rem;
            color: #fff;
            box-shadow: 0 10px 30px rgba(0,0,0,0.5);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgb(37, 108, 200);
        }
        .stats-card h5 {
            color: #2833f6;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        .stats-card canvas {
            margin-top: 1rem;
        }

        /* Gestion Cards */
        .gestion-card {
            background-color: #1e1e1e;
            border-radius: 12px;
            transition: transform 0.3s, box-shadow 0.3s;
            color: #f0f0f0;
            min-height: 200px;
        }
        .gestion-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.6);
        }
        .gestion-card .card-title {
            font-weight: 700;
            font-size: 1.4rem;
            color: #30aee6;
            text-shadow: 0 0 5px rgba(48,174,230,0.6);
        }
        .gestion-card .card-text {
            font-size: 1rem;
            color: #cfcfcf;
            margin-bottom: 1.5rem;
        }
        .btn-gestion {
            background: linear-gradient(90deg, #30aee6, #4043ff);
            border: none;
            color: #fff;
            font-weight: 600;
            padding: 0.5rem 1.5rem;
            border-radius: 8px;
            transition: all 0.3s;
        }
        .btn-gestion:hover {
            background: linear-gradient(90deg, #2251c7, #30aee6);
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(34,199,176,0.6);
        }

        /* Style pour les switches */
        .form-check-input:checked {
            background-color: #30aee6;
            border-color: #30aee6;
        }
        .form-check-input:focus {
            border-color: #30aee6;
            box-shadow: 0 0 0 0.25rem rgba(48, 174, 230, 0.25);
        }
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
        <a class="navbar-brand" href="{{ path('admin_dashboard') }}">UrbanSpace Admin</a>
        <div class="navbar-nav ms-auto d-flex align-items-center">
            <span class="nav-link">Bienvenue, {{ app.user.username }}</span>
            <form class="d-inline ms-3" action="{{ path('admin_logout') }}" method="post">
                <input type="hidden" name="_csrf_token" value="{{ csrf_token('logout') }}">
                <button type="submit" class="btn btn-link nav-link" style="border: none; background: none;">Déconnexion</button>
            </form>
        </div>
    </div>
</nav>

<div class="container">

    <!-- Statistiques -->
    <div class="row g-4">
        <div class="col-md-3">
            <div class="stats-card animate__animated animate__fadeInUp">
                <h5>Utilisateurs</h5>
                <canvas id="chartUsers"></canvas>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card animate__animated animate__fadeInUp">
                <h5>Produits</h5>
                <canvas id="chartProducts"></canvas>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card animate__animated animate__fadeInUp">
                <h5>Commandes</h5>
                <canvas id="chartOrders"></canvas>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card animate__animated animate__fadeInUp">
                <h5>Revenus</h5>
                <canvas id="chartRevenue"></canvas>
            </div>
        </div>
    </div>

    <!-- Gestion Cards -->
    <div class="row g-4 mt-4">
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Utilisateurs</h5>
                    <p class="card-text">Gérer tous les utilisateurs inscrits sur UrbanSpace.</p>
                    <a href="/admin/users" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Commandes</h5>
                    <p class="card-text">Gérer et suivre les commandes des clients.</p>
                    <a href="{{ path('admin_orders_index') }}" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Catégories</h5>
                    <p class="card-text">Ajouter, modifier ou supprimer des catégories de produits.</p>
                    <a href="/admin/categories" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Sous-Catégories</h5>
                    <p class="card-text">Gérer les sous-catégories associées aux catégories.</p>
                    <a href="/admin/subcategories" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Produits</h5>
                    <p class="card-text">Ajouter ou modifier les produits disponibles.</p>
                    <a href="/admin/products" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Collections</h5>
                    <p class="card-text">Gérer les collections de produits .</p>
                    <a href="/admin/collections" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">Black Friday</h5>
                        <div class="form-check form-switch">
                            <input class="form-check-input event-switch" type="checkbox" role="switch" 
                                   id="blackFridaySwitch" data-event-name="black_friday"
                                   style="width: 3em; height: 1.5em;">
                        </div>
                    </div>
                    <p class="card-text">Configurer les offres et réductions Black Friday.</p>
                    <a href="/admin/black-friday" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">Black Hour</h5>
                        <div class="form-check form-switch">
                            <input class="form-check-input event-switch" type="checkbox" role="switch" 
                                   id="blackHourSwitch" data-event-name="black_hour"
                                   style="width: 3em; height: 1.5em;">
                        </div>
                    </div>
                    <p class="card-text">Configurer les offres et réductions Black Hour.</p>
                    <a href="/admin/black-hour" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card gestion-card text-center p-4 h-100 shadow-lg">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Remise</h5>
                    <p class="card-text">Configurer les offres et réductions .</p>
                    <a href="/admin/sales" class="btn btn-gestion">Gérer</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts JS -->
<script>
    const usersChart = new Chart(document.getElementById('chartUsers'), {
        type: 'line',
        data: {
            labels: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin'],
            datasets: [{
                label: 'Utilisateurs',
                data: [50, 100, 150, 200, 300, 400],
                borderColor: '#22c7b0',
                backgroundColor: 'rgba(34, 199, 176, 0.2)',
                tension: 0.4,
                fill: true,
                pointRadius: 4
            }]
        },
        options: {
            responsive: true,
            plugins: { legend: { display: false } },
            scales: {
                x: { grid: { color: '#333' }, ticks: { color: '#fff' } },
                y: { grid: { color: '#333' }, ticks: { color: '#fff' } }
            }
        }
    });

    const productsChart = new Chart(document.getElementById('chartProducts'), {
        type: 'bar',
        data: {
            labels: ['Cat A', 'Cat B', 'Cat C', 'Cat D'],
            datasets: [{
                label: 'Produits',
                data: [50, 120, 80, 100],
                backgroundColor: '#fb542b'
            }]
        },
        options: {
            responsive: true,
            plugins: { legend: { display: false } },
            scales: {
                x: { grid: { color: '#333' }, ticks: { color: '#fff' } },
                y: { grid: { color: '#333' }, ticks: { color: '#fff' } }
            }
        }
    });

    const ordersChart = new Chart(document.getElementById('chartOrders'), {
        type: 'line',
        data: {
            labels: ['Semaine 1', 'Semaine 2', 'Semaine 3', 'Semaine 4'],
            datasets: [{
                label: 'Commandes',
                data: [30, 60, 50, 90],
                borderColor: '#30aee6',
                backgroundColor: 'rgba(48, 174, 230, 0.2)',
                tension: 0.4,
                fill: true,
                pointRadius: 4
            }]
        },
        options: {
            responsive: true,
            plugins: { legend: { display: false } },
            scales: {
                x: { grid: { color: '#333' }, ticks: { color: '#fff' } },
                y: { grid: { color: '#333' }, ticks: { color: '#fff' } }
            }
        }
    });

    const revenueChart = new Chart(document.getElementById('chartRevenue'), {
        type: 'bar',
        data: {
            labels: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin'],
            datasets: [{
                label: 'Revenus',
                data: [5000, 7000, 6000, 8000, 12000, 15000],
                backgroundColor: '#22c7b0'
            }]
        },
        options: {
            responsive: true,
            plugins: { legend: { display: false } },
            scales: {
                x: { grid: { color: '#333' }, ticks: { color: '#fff' } },
                y: { grid: { color: '#333' }, ticks: { color: '#fff' } }
            }
        }
    });

    // Gestion des événements des switches
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM chargé, initialisation des événements...');
        
        // Fonction pour afficher une notification
        function showNotification(message, isError = false) {
            const notification = document.createElement('div');
            notification.className = `alert ${isError ? 'alert-danger' : 'alert-success'}`;
            notification.style.position = 'fixed';
            notification.style.top = '20px';
            notification.style.right = '20px';
            notification.style.zIndex = '9999';
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Récupérer l'état initial des événements
        console.log('Récupération de l\'état initial des événements...');
        axios.get('{{ path('app_events_status') }}', {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
        .then(function(response) {
            console.log('État des événements reçu:', response.data);
            const events = response.data;
            
            // Mettre à jour les switches en fonction de l'état actuel
            if (events.hasOwnProperty('black_friday')) {
                document.getElementById('blackFridaySwitch').checked = events.black_friday;
            }
            if (events.hasOwnProperty('black_hour')) {
                document.getElementById('blackHourSwitch').checked = events.black_hour;
            }
        })
        .catch(function(error) {
            console.error('Erreur lors de la récupération de l\'état des événements:', error);
            showNotification('Erreur lors du chargement des événements', true);
        });

        // Gérer les changements d'état des switches
        document.querySelectorAll('.event-switch').forEach(function(switchElement) {
            switchElement.addEventListener('change', function() {
                const eventName = this.dataset.eventName;
                const isActive = this.checked;
                const switchElement = this;
                
                console.log(`Changement d'état pour ${eventName}: ${isActive ? 'ON' : 'OFF'}`);

                // Afficher un indicateur de chargement
                const originalText = switchElement.nextElementSibling?.textContent || '';
                if (switchElement.nextElementSibling) {
                    switchElement.nextElementSibling.textContent = 'Chargement...';
                }
                
                // Envoyer la mise à jour au serveur
                axios({
                    method: 'post',
                    url: '{{ path('app_event_toggle') }}',
                    data: {
                        eventName: eventName,
                        isActive: isActive
                    },
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(function(response) {
                    console.log('Réponse du serveur:', response.data);
                    
                    if (response.data.success) {
                        showNotification(`Événement ${eventName} mis à jour avec succès`);
                    } else {
                        console.error('Erreur côté serveur:', response.data.message);
                        showNotification('Erreur lors de la mise à jour', true);
                        // Revenir à l'état précédent en cas d'erreur
                        switchElement.checked = !isActive;
                    }
                })
                .catch(function(error) {
                    console.error('Erreur lors de la mise à jour de l\'événement:', error);
                    showNotification('Erreur de connexion au serveur', true);
                    // Revenir à l'état précédent en cas d'erreur
                    switchElement.checked = !isActive;
                })
                .finally(function() {
                    // Restaurer le texte original
                    if (switchElement.nextElementSibling) {
                        switchElement.nextElementSibling.textContent = originalText;
                    }
                });
            });
        });
    });
</script>

</body>
</html>